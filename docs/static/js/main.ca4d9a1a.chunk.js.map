{"version":3,"sources":["components/AddCategory.js","helpers/GetGifs.js","hooks/useFetchGifs.js","components/GifsGridItem.js","components/GifGrid.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","categorias","type","value","onChange","target","prototype","PropTypes","func","isRequired","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","useFetchGifs","loading","state","setstate","useEffect","then","imgs","GifsGridItem","className","src","alt","GifGrid","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"8OAGMA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAEDC,mBAAS,IAFR,mBAE9BC,EAF8B,KAElBC,EAFkB,KAoBrC,OACI,0BAAMC,SAZW,SAACC,GAClBA,EAAEC,iBAGCJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAc,SAAAS,GAAU,OAAKP,GAAL,mBAAoBO,OAC5CN,EAAc,OAOd,4BAAKD,GACL,2BACIQ,KAAK,OACLC,MAAOT,EACPU,SAtBe,SAACP,GAExBF,EAAcE,EAAEQ,OAAOF,YA0B/BZ,EAAYe,UAAY,CACpBd,c,OAAee,EAAUC,KAAKC,YAGnBlB,Q,uBCtBAmB,EAjBF,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACNC,EADM,iDAC0CC,UAAUH,GADpD,+DAEOI,MAAMF,GAFb,cAENG,EAFM,gBAGWA,EAAKC,OAHhB,uBAGJC,EAHI,EAGJA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAT9B,kBAcLM,GAdK,4CAAH,sDCwBEO,EArBM,SAACf,GAAc,IAAD,EAELlB,mBAAS,CAC/ByB,KAAM,GACNS,SAAS,IAJkB,mBAExBC,EAFwB,KAEjBC,EAFiB,KAkB/B,OAXAC,qBAAU,WACNpB,EAAQC,GACHoB,MAAK,SAAAC,GAEEH,EAAS,CACLX,KAAMc,EACNL,SAAS,SAG1B,CAAChB,IAEGiB,GCnBEK,EAAe,SAAC,GAAuB,EAArBX,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAEtC,OACI,yBAAKqB,UAAU,0CACX,yBAAKC,IAAKtB,EAAKuB,IAAKb,IACpB,+BAAKA,EAAL,OCuBGc,EA1BC,SAAC,GAAkB,IAAhB1B,EAAe,EAAfA,SAAe,EAELe,EAAaf,GAA/BO,EAFuB,EAEvBA,KAAMS,EAFiB,EAEjBA,QAEb,OACI,oCACI,4BAAKhB,GAEbgB,GAAW,uBAAGO,UAAU,mBAAb,gBAGD,yBAAKA,UAAU,aAGThB,EAAKE,KAAI,SAAAC,GAAG,OACR,kBAAC,EAAD,eACIiB,IAAKjB,EAAIC,IACLD,UCMjBkB,EAvBM,WAAO,IAAD,EACa9C,mBAAS,CAAC,eADvB,mBAChB+C,EADgB,KACJhD,EADI,KAGvB,OACI,oCACI,4CACA,kBAAC,EAAD,CAAaA,cAAeA,IAC5B,6BAEA,4BAEQgD,EAAWpB,KAAI,SAAAT,GAAQ,OACnB,kBAAC,EAAD,CACI2B,IAAK3B,EACLA,SAAUA,UCbtC8B,IAASC,OACL,kBAAC,EAAD,MACFC,SAASC,eAAe,W","file":"static/js/main.ca4d9a1a.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nconst AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setinputValue] = useState('');\r\n\r\n    const handlerInputChange = (e) => {\r\n        //console.log(e.target.value);\r\n        setinputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        // console.log('Submit Hecho')\r\n\r\n        if(inputValue.trim().length > 2){\r\n            setCategories(categorias => [inputValue, ...categorias]);\r\n            setinputValue('');\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <h1>{inputValue}</h1>\r\n            <input\r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={handlerInputChange}\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.prototype = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n\r\nexport default AddCategory;","const getGifs = async (category) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=FdbJxKPfIe8M0TjVcM8c6iMK0HN2NZeP`\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n    //console.log(gifs)\r\n    //console.log(data)\r\n    return gifs;\r\n}\r\n\r\nexport default getGifs;","import { useState, useEffect } from 'react';\r\nimport getGifs from '../helpers/GetGifs';\r\n\r\nconst useFetchGifs = (category) => {\r\n\r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(() => {\r\n        getGifs(category)\r\n            .then(imgs => {\r\n                    //console.log(imgs)\r\n                    setstate({\r\n                        data: imgs,\r\n                        loading: false\r\n                    });\r\n            })\r\n    }, [category])\r\n\r\n    return state; //   data: [], loading: true};\r\n}\r\n\r\nexport default useFetchGifs;","import React from 'react'\r\n\r\nexport const GifsGridItem = ({ id, title, url }) => { // props\r\n    // console.log(id, title, url) // props\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={url} alt={title} />\r\n            <p> {title} </p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport useFetchGifs from '../hooks/useFetchGifs';\r\n    import { GifsGridItem } from './GifsGridItem';\r\n\r\nconst GifGrid = ({ category }) => {\r\n\r\n    const {data, loading } = useFetchGifs(category);\r\n\r\n    return (\r\n        <>\r\n            <h3>{category}</h3>\r\n{\r\n    loading && <p className=\"animate__flash \">Cargando....</p> \r\n}\r\n\r\n            { <div className=\"card-grid\">\r\n\r\n                {\r\n                    data.map(img => (\r\n                        <GifsGridItem\r\n                            key={img.id}\r\n                            {...img}\r\n                        />\r\n                    ))\r\n                }\r\n            </div>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifGrid;","import React, { useState } from 'react'\r\nimport AddCategory  from './components/AddCategory';\r\nimport GifGrid  from './components/GifGrid';\r\n\r\nconst GifExpertApp = () => {\r\n    const [categories, setCategories] = useState(['JavaScript']);\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={setCategories} />\r\n            <hr />\r\n\r\n            <ol>\r\n                {\r\n                    categories.map(category => (\r\n                        <GifGrid\r\n                            key={category}\r\n                            category={category}\r\n                        />\r\n                    ))\r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GifExpertApp  from './GifExpertApp.js'\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}